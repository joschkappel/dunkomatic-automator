
- name: create certificate folders
  ansible.builtin.file:
    path: "{{ laradock_data_dir }}/certbot/certs" 
    state: directory

- name: copy http site conf
  template:
    src: sites.conf.j2
    dest: "{{ laradock_dir }}/nginx/sites/{{ ansible_host }}.conf"

- name: stop nginx
  docker_compose:
    state: present
    stopped: yes
    project_src: "{{ laradock_dir }}"
    services:
      - nginx
  tags:
    - docker

- name: rebuild and  start nginx
  docker_compose:
    state: present
    restarted: yes
    build: yes
    nocache: yes
    project_src: "{{ laradock_dir }}"
    services:
      - nginx
  tags:
    - docker

- name: rebuild and  start certbot
  docker_compose:
    state: present
    restarted: yes
    build: yes
    nocache: yes
    project_src: "{{ laradock_dir }}"
    services:
      - certbot
  tags:
    - docker

- name: download nginx SSL params
  uri:
    url: https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf
    dest: "{{ laradock_data_dir }}/certbot/letsencrypt/options-ssl-nginx.conf"

- name: download SSL DH params
  uri:
    url: https://raw.githubusercontent.com/certbot/certbot/master/certbot/certbot/ssl-dhparams.pem
    dest: "{{ laradock_data_dir }}/certbot/letsencrypt/ssl-dhparams.pem"


- name: store the statistics of cert folder in the 'out' variable
  find:
    path: "{{ laradock_data_dir }}/certbot/certs"
  register: out

- debug: 
    var: out
  

- name: check certs are created
  set_fact:
    cert_exists: "{{out.examined <= 1 }}"

- name: copy ssh site conf
  template:
    src: sites_ssh.conf.j2
    dest: "{{ laradock_dir }}/nginx/sites/{{ ansible_host }}.conf"
  when: cert_exists|default(False)|bool == True

- name: stop nginx
  docker_compose:
    state: present
    stopped: yes
    project_src: "{{ laradock_dir }}"
    services:
      - nginx
  tags:
    - docker
  when: cert_exists|default(False)|bool == True

- name: rebuild and  start nginx
  docker_compose:
    state: present
    restarted: yes
    build: yes
    nocache: yes
    project_src: "{{ laradock_dir }}"
    services:
      - nginx
  register: output
  tags:
    - docker
  when: cert_exists|default(False)|bool == True

- name: Print composer result
  ansible.builtin.debug:
    var: output
    verbosity: 2
  when: cert_exists|default(False)|bool == True

- assert:
    that:
      - "output.services.nginx.laradock_nginx_1.state.running"
  when: cert_exists|default(False)|bool == True
